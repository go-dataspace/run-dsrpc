// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: dsp/v1alpha1/provider.proto
//

import Connect
import Foundation
import SwiftProtobuf

/// The ProviderService is the expected grpc service that RUN-DSP will interface with.
/// Outside of the defined calls, RUN-DSP will also forward the `authorization` header.
/// The reason for this is that authorization will vary between dataspaces. Also, the provider
/// will want to show different data dependent on the credentials.
internal protocol Dsp_V1alpha1_ProviderServiceClientInterface: Sendable {

    /// Ping is a request to test if the provider is working, and to test the auth information.
    @available(iOS 13, *)
    func `ping`(request: Dsp_V1alpha1_PingRequest, headers: Connect.Headers) async -> ResponseMessage<Dsp_V1alpha1_PingResponse>

    /// Gets the catalogue based on the query parameters and the authorization header.
    @available(iOS 13, *)
    func `getCatalogue`(request: Dsp_V1alpha1_GetCatalogueRequest, headers: Connect.Headers) async -> ResponseMessage<Dsp_V1alpha1_GetCatalogueResponse>

    /// Gets information about a single dataset.
    @available(iOS 13, *)
    func `getDataset`(request: Dsp_V1alpha1_GetDatasetRequest, headers: Connect.Headers) async -> ResponseMessage<Dsp_V1alpha1_GetDatasetResponse>

    /// Publishes a dataset,
    @available(iOS 13, *)
    func `publishDataset`(request: Dsp_V1alpha1_PublishDatasetRequest, headers: Connect.Headers) async -> ResponseMessage<Dsp_V1alpha1_PublishDatasetResponse>

    /// Unpublishes a dataset.
    @available(iOS 13, *)
    func `unpublishDataset`(request: Dsp_V1alpha1_UnpublishDatasetRequest, headers: Connect.Headers) async -> ResponseMessage<Dsp_V1alpha1_UnpublishDatasetResponse>

    /// Asks provider to suspend a transfer
    @available(iOS 13, *)
    func `suspendPublishedDataset`(request: Dsp_V1alpha1_SuspendPublishedDatasetRequest, headers: Connect.Headers) async -> ResponseMessage<Dsp_V1alpha1_SuspendPublishedDatasetResponse>

    /// Asks provider to unsuspend (re-publish?) a transfer
    @available(iOS 13, *)
    func `unsuspendPublishedDataset`(request: Dsp_V1alpha1_UnsuspendPublishedDatasetRequest, headers: Connect.Headers) async -> ResponseMessage<Dsp_V1alpha1_UnsuspendPublishedDatasetResponse>
}

/// Concrete implementation of `Dsp_V1alpha1_ProviderServiceClientInterface`.
internal final class Dsp_V1alpha1_ProviderServiceClient: Dsp_V1alpha1_ProviderServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    internal init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    internal func `ping`(request: Dsp_V1alpha1_PingRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Dsp_V1alpha1_PingResponse> {
        return await self.client.unary(path: "/dsp.v1alpha1.ProviderService/Ping", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `getCatalogue`(request: Dsp_V1alpha1_GetCatalogueRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Dsp_V1alpha1_GetCatalogueResponse> {
        return await self.client.unary(path: "/dsp.v1alpha1.ProviderService/GetCatalogue", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `getDataset`(request: Dsp_V1alpha1_GetDatasetRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Dsp_V1alpha1_GetDatasetResponse> {
        return await self.client.unary(path: "/dsp.v1alpha1.ProviderService/GetDataset", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `publishDataset`(request: Dsp_V1alpha1_PublishDatasetRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Dsp_V1alpha1_PublishDatasetResponse> {
        return await self.client.unary(path: "/dsp.v1alpha1.ProviderService/PublishDataset", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `unpublishDataset`(request: Dsp_V1alpha1_UnpublishDatasetRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Dsp_V1alpha1_UnpublishDatasetResponse> {
        return await self.client.unary(path: "/dsp.v1alpha1.ProviderService/UnpublishDataset", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `suspendPublishedDataset`(request: Dsp_V1alpha1_SuspendPublishedDatasetRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Dsp_V1alpha1_SuspendPublishedDatasetResponse> {
        return await self.client.unary(path: "/dsp.v1alpha1.ProviderService/SuspendPublishedDataset", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `unsuspendPublishedDataset`(request: Dsp_V1alpha1_UnsuspendPublishedDatasetRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Dsp_V1alpha1_UnsuspendPublishedDatasetResponse> {
        return await self.client.unary(path: "/dsp.v1alpha1.ProviderService/UnsuspendPublishedDataset", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    internal enum Metadata {
        internal enum Methods {
            internal static let ping = Connect.MethodSpec(name: "Ping", service: "dsp.v1alpha1.ProviderService", type: .unary)
            internal static let getCatalogue = Connect.MethodSpec(name: "GetCatalogue", service: "dsp.v1alpha1.ProviderService", type: .unary)
            internal static let getDataset = Connect.MethodSpec(name: "GetDataset", service: "dsp.v1alpha1.ProviderService", type: .unary)
            internal static let publishDataset = Connect.MethodSpec(name: "PublishDataset", service: "dsp.v1alpha1.ProviderService", type: .unary)
            internal static let unpublishDataset = Connect.MethodSpec(name: "UnpublishDataset", service: "dsp.v1alpha1.ProviderService", type: .unary)
            internal static let suspendPublishedDataset = Connect.MethodSpec(name: "SuspendPublishedDataset", service: "dsp.v1alpha1.ProviderService", type: .unary)
            internal static let unsuspendPublishedDataset = Connect.MethodSpec(name: "UnsuspendPublishedDataset", service: "dsp.v1alpha1.ProviderService", type: .unary)
        }
    }
}
