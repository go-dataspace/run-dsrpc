// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: dsp/v1alpha1/provider.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.dsp.v1alpha1;

@kotlin.jvm.JvmName("-initializegetDatasetResponse")
public inline fun getDatasetResponse(block: com.dsp.v1alpha1.GetDatasetResponseKt.Dsl.() -> kotlin.Unit): com.dsp.v1alpha1.GetDatasetResponse =
  com.dsp.v1alpha1.GetDatasetResponseKt.Dsl._create(com.dsp.v1alpha1.GetDatasetResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * GetDatasetResponse contains the requested dataset.
 * ```
 *
 * Protobuf type `dsp.v1alpha1.GetDatasetResponse`
 */
public object GetDatasetResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.dsp.v1alpha1.GetDatasetResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.dsp.v1alpha1.GetDatasetResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.dsp.v1alpha1.GetDatasetResponse = _builder.build()

    /**
     * `.dsp.v1alpha1.Dataset dataset = 1 [json_name = "dataset"];`
     */
    public var dataset: com.dsp.v1alpha1.Dataset
      @JvmName("getDataset")
      get() = _builder.getDataset()
      @JvmName("setDataset")
      set(value) {
        _builder.setDataset(value)
      }
    /**
     * `.dsp.v1alpha1.Dataset dataset = 1 [json_name = "dataset"];`
     */
    public fun clearDataset() {
      _builder.clearDataset()
    }
    /**
     * `.dsp.v1alpha1.Dataset dataset = 1 [json_name = "dataset"];`
     * @return Whether the dataset field is set.
     */
    public fun hasDataset(): kotlin.Boolean {
      return _builder.hasDataset()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.dsp.v1alpha1.GetDatasetResponse.copy(block: `com.dsp.v1alpha1`.GetDatasetResponseKt.Dsl.() -> kotlin.Unit): com.dsp.v1alpha1.GetDatasetResponse =
  `com.dsp.v1alpha1`.GetDatasetResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.dsp.v1alpha1.GetDatasetResponseOrBuilder.datasetOrNull: com.dsp.v1alpha1.Dataset?
  get() = if (hasDataset()) getDataset() else null

