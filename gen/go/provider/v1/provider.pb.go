// Copyright 2024 go-dataspace
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: provider/v1/provider.proto

package providerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AuthenticationType represents the way to authenticate to get a published information.
type AuthenticationType int32

const (
	AuthenticationType_AUTHENTICATION_TYPE_UNSPECIFIED AuthenticationType = 0
	AuthenticationType_AUTHENTICATION_TYPE_BEARER      AuthenticationType = 1
	AuthenticationType_AUTHENTICATION_TYPE_BASIC       AuthenticationType = 2
)

// Enum value maps for AuthenticationType.
var (
	AuthenticationType_name = map[int32]string{
		0: "AUTHENTICATION_TYPE_UNSPECIFIED",
		1: "AUTHENTICATION_TYPE_BEARER",
		2: "AUTHENTICATION_TYPE_BASIC",
	}
	AuthenticationType_value = map[string]int32{
		"AUTHENTICATION_TYPE_UNSPECIFIED": 0,
		"AUTHENTICATION_TYPE_BEARER":      1,
		"AUTHENTICATION_TYPE_BASIC":       2,
	}
)

func (x AuthenticationType) Enum() *AuthenticationType {
	p := new(AuthenticationType)
	*p = x
	return p
}

func (x AuthenticationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticationType) Descriptor() protoreflect.EnumDescriptor {
	return file_provider_v1_provider_proto_enumTypes[0].Descriptor()
}

func (AuthenticationType) Type() protoreflect.EnumType {
	return &file_provider_v1_provider_proto_enumTypes[0]
}

func (x AuthenticationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthenticationType.Descriptor instead.
func (AuthenticationType) EnumDescriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{0}
}

// PingRequest is an empty message, used instead of the Empty type in case we want
// to add parameters.
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{0}
}

// PingResponse contains infomational data about the provider.
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderName        string `protobuf:"bytes,1,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	ProviderDescription string `protobuf:"bytes,2,opt,name=provider_description,json=providerDescription,proto3" json:"provider_description,omitempty"`
	Authenticated       bool   `protobuf:"varint,3,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *PingResponse) GetProviderDescription() string {
	if x != nil {
		return x.ProviderDescription
	}
	return ""
}

func (x *PingResponse) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

// GetCatalogRequest represents the parameters for the GetCatalog call.
type GetCatalogueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query_parameters is just a key/value map. These are not specified in the dataspace standard.
	// RUN-DSP also does not define them yet, so for now this is a placeholder.
	QueryParameters map[string]string `protobuf:"bytes,1,rep,name=query_parameters,json=queryParameters,proto3" json:"query_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetCatalogueRequest) Reset() {
	*x = GetCatalogueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCatalogueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatalogueRequest) ProtoMessage() {}

func (x *GetCatalogueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatalogueRequest.ProtoReflect.Descriptor instead.
func (*GetCatalogueRequest) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{2}
}

func (x *GetCatalogueRequest) GetQueryParameters() map[string]string {
	if x != nil {
		return x.QueryParameters
	}
	return nil
}

// GetCatalogueResponse returns all the datasets matched by GetCatalogue.
type GetCatalogueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasets []*Dataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
}

func (x *GetCatalogueResponse) Reset() {
	*x = GetCatalogueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCatalogueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatalogueResponse) ProtoMessage() {}

func (x *GetCatalogueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatalogueResponse.ProtoReflect.Descriptor instead.
func (*GetCatalogueResponse) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{3}
}

func (x *GetCatalogueResponse) GetDatasets() []*Dataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

// GetDatasetRequest contains the dataset ID.
type GetDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *GetDatasetRequest) Reset() {
	*x = GetDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetRequest) ProtoMessage() {}

func (x *GetDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetRequest) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{4}
}

func (x *GetDatasetRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

// GetDatasetResponse contains the requested dataset.
type GetDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset *Dataset `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
}

func (x *GetDatasetResponse) Reset() {
	*x = GetDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetResponse) ProtoMessage() {}

func (x *GetDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetResponse) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{5}
}

func (x *GetDatasetResponse) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

// PublishDatasetRequest contains the ID for the dataset, and a publish ID that's specific to
// this publish instance. A dataset can be published many concurrent times with different credentials.
type PublishDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	PublishId string `protobuf:"bytes,2,opt,name=publish_id,json=publishId,proto3" json:"publish_id,omitempty"`
}

func (x *PublishDatasetRequest) Reset() {
	*x = PublishDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDatasetRequest) ProtoMessage() {}

func (x *PublishDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDatasetRequest.ProtoReflect.Descriptor instead.
func (*PublishDatasetRequest) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{6}
}

func (x *PublishDatasetRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *PublishDatasetRequest) GetPublishId() string {
	if x != nil {
		return x.PublishId
	}
	return ""
}

// PublishDatasetResponse contains the publish information.
type PublishDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishInfo *PublishInfo `protobuf:"bytes,1,opt,name=publish_info,json=publishInfo,proto3" json:"publish_info,omitempty"`
}

func (x *PublishDatasetResponse) Reset() {
	*x = PublishDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDatasetResponse) ProtoMessage() {}

func (x *PublishDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDatasetResponse.ProtoReflect.Descriptor instead.
func (*PublishDatasetResponse) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{7}
}

func (x *PublishDatasetResponse) GetPublishInfo() *PublishInfo {
	if x != nil {
		return x.PublishInfo
	}
	return nil
}

// UnpublishDatasetRequest contains the publish ID of the published dataset.
type UnpublishDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishId string `protobuf:"bytes,1,opt,name=publish_id,json=publishId,proto3" json:"publish_id,omitempty"`
}

func (x *UnpublishDatasetRequest) Reset() {
	*x = UnpublishDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishDatasetRequest) ProtoMessage() {}

func (x *UnpublishDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishDatasetRequest.ProtoReflect.Descriptor instead.
func (*UnpublishDatasetRequest) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{8}
}

func (x *UnpublishDatasetRequest) GetPublishId() string {
	if x != nil {
		return x.PublishId
	}
	return ""
}

// UnpublishDatasetResponse contains a boolean indicating success.
type UnpublishDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UnpublishDatasetResponse) Reset() {
	*x = UnpublishDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishDatasetResponse) ProtoMessage() {}

func (x *UnpublishDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishDatasetResponse.ProtoReflect.Descriptor instead.
func (*UnpublishDatasetResponse) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{9}
}

func (x *UnpublishDatasetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Dataset represents a dataset. What exactly is in a dataset is up to the service.
// An example of a dataset could be a file that's served, or multiple files
// that are considered a set.
type Dataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AccessMethods string                 `protobuf:"bytes,3,opt,name=access_methods,json=accessMethods,proto3" json:"access_methods,omitempty"`
	Description   []*Multilingual        `protobuf:"bytes,4,rep,name=description,proto3" json:"description,omitempty"`
	Keywords      []string               `protobuf:"bytes,5,rep,name=keywords,proto3" json:"keywords,omitempty"`
	Creator       *string                `protobuf:"bytes,6,opt,name=creator,proto3,oneof" json:"creator,omitempty"`
	Issued        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=issued,proto3,oneof" json:"issued,omitempty"`
	Modified      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=modified,proto3,oneof" json:"modified,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Dataset) Reset() {
	*x = Dataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dataset) ProtoMessage() {}

func (x *Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dataset.ProtoReflect.Descriptor instead.
func (*Dataset) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{10}
}

func (x *Dataset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dataset) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Dataset) GetAccessMethods() string {
	if x != nil {
		return x.AccessMethods
	}
	return ""
}

func (x *Dataset) GetDescription() []*Multilingual {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Dataset) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *Dataset) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *Dataset) GetIssued() *timestamppb.Timestamp {
	if x != nil {
		return x.Issued
	}
	return nil
}

func (x *Dataset) GetModified() *timestamppb.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Dataset) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// PublishInfo represents a published file, where to get it and its authentication details.
type PublishInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                string             `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	AuthenticationType AuthenticationType `protobuf:"varint,2,opt,name=authentication_type,json=authenticationType,proto3,enum=provider.v1.AuthenticationType" json:"authentication_type,omitempty"`
	Username           string             `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password           string             `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *PublishInfo) Reset() {
	*x = PublishInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishInfo) ProtoMessage() {}

func (x *PublishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishInfo.ProtoReflect.Descriptor instead.
func (*PublishInfo) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{11}
}

func (x *PublishInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PublishInfo) GetAuthenticationType() AuthenticationType {
	if x != nil {
		return x.AuthenticationType
	}
	return AuthenticationType_AUTHENTICATION_TYPE_UNSPECIFIED
}

func (x *PublishInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PublishInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Multilingual represents a message with language metadata attached.
type Multilingual struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *Multilingual) Reset() {
	*x = Multilingual{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_v1_provider_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Multilingual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Multilingual) ProtoMessage() {}

func (x *Multilingual) ProtoReflect() protoreflect.Message {
	mi := &file_provider_v1_provider_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Multilingual.ProtoReflect.Descriptor instead.
func (*Multilingual) Descriptor() ([]byte, []int) {
	return file_provider_v1_provider_proto_rawDescGZIP(), []int{12}
}

func (x *Multilingual) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Multilingual) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

var File_provider_v1_provider_proto protoreflect.FileDescriptor

var file_provider_v1_provider_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x31, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x60, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73,
	0x22, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x55, 0x0a, 0x15, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49,
	0x64, 0x22, 0x55, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a, 0x17, 0x55, 0x6e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xe5, 0x03, 0x0a, 0x07, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61,
	0x6c, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x06, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x02, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x3e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x22, 0xa9, 0x01, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x50, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x40, 0x0a, 0x0c,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2a, 0x78,
	0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x55, 0x54,
	0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x42, 0x45, 0x41, 0x52, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x55, 0x54,
	0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x02, 0x32, 0xb8, 0x03, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x04,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x10, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0xa2, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75,
	0x66, 0x2d, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x50, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x0b, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x17, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_provider_v1_provider_proto_rawDescOnce sync.Once
	file_provider_v1_provider_proto_rawDescData = file_provider_v1_provider_proto_rawDesc
)

func file_provider_v1_provider_proto_rawDescGZIP() []byte {
	file_provider_v1_provider_proto_rawDescOnce.Do(func() {
		file_provider_v1_provider_proto_rawDescData = protoimpl.X.CompressGZIP(file_provider_v1_provider_proto_rawDescData)
	})
	return file_provider_v1_provider_proto_rawDescData
}

var file_provider_v1_provider_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_provider_v1_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_provider_v1_provider_proto_goTypes = []any{
	(AuthenticationType)(0),          // 0: provider.v1.AuthenticationType
	(*PingRequest)(nil),              // 1: provider.v1.PingRequest
	(*PingResponse)(nil),             // 2: provider.v1.PingResponse
	(*GetCatalogueRequest)(nil),      // 3: provider.v1.GetCatalogueRequest
	(*GetCatalogueResponse)(nil),     // 4: provider.v1.GetCatalogueResponse
	(*GetDatasetRequest)(nil),        // 5: provider.v1.GetDatasetRequest
	(*GetDatasetResponse)(nil),       // 6: provider.v1.GetDatasetResponse
	(*PublishDatasetRequest)(nil),    // 7: provider.v1.PublishDatasetRequest
	(*PublishDatasetResponse)(nil),   // 8: provider.v1.PublishDatasetResponse
	(*UnpublishDatasetRequest)(nil),  // 9: provider.v1.UnpublishDatasetRequest
	(*UnpublishDatasetResponse)(nil), // 10: provider.v1.UnpublishDatasetResponse
	(*Dataset)(nil),                  // 11: provider.v1.Dataset
	(*PublishInfo)(nil),              // 12: provider.v1.PublishInfo
	(*Multilingual)(nil),             // 13: provider.v1.Multilingual
	nil,                              // 14: provider.v1.GetCatalogueRequest.QueryParametersEntry
	nil,                              // 15: provider.v1.Dataset.MetadataEntry
	(*timestamppb.Timestamp)(nil),    // 16: google.protobuf.Timestamp
}
var file_provider_v1_provider_proto_depIdxs = []int32{
	14, // 0: provider.v1.GetCatalogueRequest.query_parameters:type_name -> provider.v1.GetCatalogueRequest.QueryParametersEntry
	11, // 1: provider.v1.GetCatalogueResponse.datasets:type_name -> provider.v1.Dataset
	11, // 2: provider.v1.GetDatasetResponse.dataset:type_name -> provider.v1.Dataset
	12, // 3: provider.v1.PublishDatasetResponse.publish_info:type_name -> provider.v1.PublishInfo
	13, // 4: provider.v1.Dataset.description:type_name -> provider.v1.Multilingual
	16, // 5: provider.v1.Dataset.issued:type_name -> google.protobuf.Timestamp
	16, // 6: provider.v1.Dataset.modified:type_name -> google.protobuf.Timestamp
	15, // 7: provider.v1.Dataset.metadata:type_name -> provider.v1.Dataset.MetadataEntry
	0,  // 8: provider.v1.PublishInfo.authentication_type:type_name -> provider.v1.AuthenticationType
	1,  // 9: provider.v1.ProviderService.Ping:input_type -> provider.v1.PingRequest
	3,  // 10: provider.v1.ProviderService.GetCatalogue:input_type -> provider.v1.GetCatalogueRequest
	5,  // 11: provider.v1.ProviderService.GetDataset:input_type -> provider.v1.GetDatasetRequest
	7,  // 12: provider.v1.ProviderService.PublishDataset:input_type -> provider.v1.PublishDatasetRequest
	9,  // 13: provider.v1.ProviderService.UnpublishDataset:input_type -> provider.v1.UnpublishDatasetRequest
	2,  // 14: provider.v1.ProviderService.Ping:output_type -> provider.v1.PingResponse
	4,  // 15: provider.v1.ProviderService.GetCatalogue:output_type -> provider.v1.GetCatalogueResponse
	6,  // 16: provider.v1.ProviderService.GetDataset:output_type -> provider.v1.GetDatasetResponse
	8,  // 17: provider.v1.ProviderService.PublishDataset:output_type -> provider.v1.PublishDatasetResponse
	10, // 18: provider.v1.ProviderService.UnpublishDataset:output_type -> provider.v1.UnpublishDatasetResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_provider_v1_provider_proto_init() }
func file_provider_v1_provider_proto_init() {
	if File_provider_v1_provider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_provider_v1_provider_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetCatalogueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetCatalogueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PublishDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PublishDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UnpublishDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UnpublishDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Dataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PublishInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_v1_provider_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Multilingual); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_provider_v1_provider_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_provider_v1_provider_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_provider_v1_provider_proto_goTypes,
		DependencyIndexes: file_provider_v1_provider_proto_depIdxs,
		EnumInfos:         file_provider_v1_provider_proto_enumTypes,
		MessageInfos:      file_provider_v1_provider_proto_msgTypes,
	}.Build()
	File_provider_v1_provider_proto = out.File
	file_provider_v1_provider_proto_rawDesc = nil
	file_provider_v1_provider_proto_goTypes = nil
	file_provider_v1_provider_proto_depIdxs = nil
}
