// Copyright 2024 go-dataspace
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: dsp/v1alpha1/client.proto

package dspv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ClientServicePingRequest is an empty message, used instead of the Empty type in case we want
// to add parameters.
type ClientServicePingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientServicePingRequest) Reset() {
	*x = ClientServicePingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientServicePingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientServicePingRequest) ProtoMessage() {}

func (x *ClientServicePingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientServicePingRequest.ProtoReflect.Descriptor instead.
func (*ClientServicePingRequest) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{0}
}

// ClientServicePingResponse is an empty message for checking GRPC connection.
type ClientServicePingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientServicePingResponse) Reset() {
	*x = ClientServicePingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientServicePingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientServicePingResponse) ProtoMessage() {}

func (x *ClientServicePingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientServicePingResponse.ProtoReflect.Descriptor instead.
func (*ClientServicePingResponse) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{1}
}

// GetProviderCatalogueRequest represents the parameters for the GetProviderCatalogue request
type GetProviderCatalogueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderUri     string            `protobuf:"bytes,1,opt,name=provider_uri,json=providerUri,proto3" json:"provider_uri,omitempty"`
	QueryParameters map[string]string `protobuf:"bytes,2,rep,name=query_parameters,json=queryParameters,proto3" json:"query_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetProviderCatalogueRequest) Reset() {
	*x = GetProviderCatalogueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderCatalogueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderCatalogueRequest) ProtoMessage() {}

func (x *GetProviderCatalogueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderCatalogueRequest.ProtoReflect.Descriptor instead.
func (*GetProviderCatalogueRequest) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{2}
}

func (x *GetProviderCatalogueRequest) GetProviderUri() string {
	if x != nil {
		return x.ProviderUri
	}
	return ""
}

func (x *GetProviderCatalogueRequest) GetQueryParameters() map[string]string {
	if x != nil {
		return x.QueryParameters
	}
	return nil
}

// GetProviderCatalogueResponse returns all the datasets matched by GetProviderCatalogue.
type GetProviderCatalogueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasets []*Dataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
}

func (x *GetProviderCatalogueResponse) Reset() {
	*x = GetProviderCatalogueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderCatalogueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderCatalogueResponse) ProtoMessage() {}

func (x *GetProviderCatalogueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderCatalogueResponse.ProtoReflect.Descriptor instead.
func (*GetProviderCatalogueResponse) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{3}
}

func (x *GetProviderCatalogueResponse) GetDatasets() []*Dataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

// GetProviderDatasetRequest contains the dataset ID.
type GetProviderDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderUrl string `protobuf:"bytes,1,opt,name=provider_url,json=providerUrl,proto3" json:"provider_url,omitempty"`
	DatasetId   string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *GetProviderDatasetRequest) Reset() {
	*x = GetProviderDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderDatasetRequest) ProtoMessage() {}

func (x *GetProviderDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderDatasetRequest.ProtoReflect.Descriptor instead.
func (*GetProviderDatasetRequest) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{4}
}

func (x *GetProviderDatasetRequest) GetProviderUrl() string {
	if x != nil {
		return x.ProviderUrl
	}
	return ""
}

func (x *GetProviderDatasetRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

// GetProviderDatasetResponse contains the requested dataset.
type GetProviderDatasetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderUrl string   `protobuf:"bytes,1,opt,name=provider_url,json=providerUrl,proto3" json:"provider_url,omitempty"`
	Dataset     *Dataset `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
}

func (x *GetProviderDatasetResponse) Reset() {
	*x = GetProviderDatasetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderDatasetResponse) ProtoMessage() {}

func (x *GetProviderDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderDatasetResponse.ProtoReflect.Descriptor instead.
func (*GetProviderDatasetResponse) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{5}
}

func (x *GetProviderDatasetResponse) GetProviderUrl() string {
	if x != nil {
		return x.ProviderUrl
	}
	return ""
}

func (x *GetProviderDatasetResponse) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

// GetProviderDatasetDownloadInformationRequest contains the ID for the dataset
// we want to be able to download.
type GetProviderDatasetDownloadInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderUrl string `protobuf:"bytes,1,opt,name=provider_url,json=providerUrl,proto3" json:"provider_url,omitempty"`
	DatasetId   string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *GetProviderDatasetDownloadInformationRequest) Reset() {
	*x = GetProviderDatasetDownloadInformationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderDatasetDownloadInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderDatasetDownloadInformationRequest) ProtoMessage() {}

func (x *GetProviderDatasetDownloadInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderDatasetDownloadInformationRequest.ProtoReflect.Descriptor instead.
func (*GetProviderDatasetDownloadInformationRequest) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{6}
}

func (x *GetProviderDatasetDownloadInformationRequest) GetProviderUrl() string {
	if x != nil {
		return x.ProviderUrl
	}
	return ""
}

func (x *GetProviderDatasetDownloadInformationRequest) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

// GetProviderDatasetDownloadInformationResponse contains the information needed
// to download a file, including authentication etc.
type GetProviderDatasetDownloadInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishInfo *PublishInfo `protobuf:"bytes,1,opt,name=publish_info,json=publishInfo,proto3" json:"publish_info,omitempty"`
	TransferId  string       `protobuf:"bytes,2,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *GetProviderDatasetDownloadInformationResponse) Reset() {
	*x = GetProviderDatasetDownloadInformationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderDatasetDownloadInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderDatasetDownloadInformationResponse) ProtoMessage() {}

func (x *GetProviderDatasetDownloadInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderDatasetDownloadInformationResponse.ProtoReflect.Descriptor instead.
func (*GetProviderDatasetDownloadInformationResponse) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{7}
}

func (x *GetProviderDatasetDownloadInformationResponse) GetPublishInfo() *PublishInfo {
	if x != nil {
		return x.PublishInfo
	}
	return nil
}

func (x *GetProviderDatasetDownloadInformationResponse) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

// SignalTransferCompleteRequest is for telling the provider that we are done
// receiving the dataset.
type SignalTransferCompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *SignalTransferCompleteRequest) Reset() {
	*x = SignalTransferCompleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalTransferCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalTransferCompleteRequest) ProtoMessage() {}

func (x *SignalTransferCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalTransferCompleteRequest.ProtoReflect.Descriptor instead.
func (*SignalTransferCompleteRequest) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{8}
}

func (x *SignalTransferCompleteRequest) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

// SignalTransferCompleteResponse is received when we successfully sent a
// transfer complete request.
type SignalTransferCompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignalTransferCompleteResponse) Reset() {
	*x = SignalTransferCompleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalTransferCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalTransferCompleteResponse) ProtoMessage() {}

func (x *SignalTransferCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalTransferCompleteResponse.ProtoReflect.Descriptor instead.
func (*SignalTransferCompleteResponse) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{9}
}

// SignalTransferCancelledRequest is sent when the client wants to cancel a transfer.
type SignalTransferCancelledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *SignalTransferCancelledRequest) Reset() {
	*x = SignalTransferCancelledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalTransferCancelledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalTransferCancelledRequest) ProtoMessage() {}

func (x *SignalTransferCancelledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalTransferCancelledRequest.ProtoReflect.Descriptor instead.
func (*SignalTransferCancelledRequest) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{10}
}

func (x *SignalTransferCancelledRequest) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

// SignalTransferCancelledResponse tells that the cancellation requests was received.
type SignalTransferCancelledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignalTransferCancelledResponse) Reset() {
	*x = SignalTransferCancelledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalTransferCancelledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalTransferCancelledResponse) ProtoMessage() {}

func (x *SignalTransferCancelledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalTransferCancelledResponse.ProtoReflect.Descriptor instead.
func (*SignalTransferCancelledResponse) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{11}
}

// SignalTransferSuspendRequest is sent when the client wishes to pause the transfer.
type SignalTransferSuspendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *SignalTransferSuspendRequest) Reset() {
	*x = SignalTransferSuspendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalTransferSuspendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalTransferSuspendRequest) ProtoMessage() {}

func (x *SignalTransferSuspendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalTransferSuspendRequest.ProtoReflect.Descriptor instead.
func (*SignalTransferSuspendRequest) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{12}
}

func (x *SignalTransferSuspendRequest) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

// SignalTransferSuspendResponse tells the client that the pause request was received.
type SignalTransferSuspendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignalTransferSuspendResponse) Reset() {
	*x = SignalTransferSuspendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalTransferSuspendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalTransferSuspendResponse) ProtoMessage() {}

func (x *SignalTransferSuspendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalTransferSuspendResponse.ProtoReflect.Descriptor instead.
func (*SignalTransferSuspendResponse) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{13}
}

// SignalTransferResumeRequest tells the provider that the client wants to resume transfer.
type SignalTransferResumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *SignalTransferResumeRequest) Reset() {
	*x = SignalTransferResumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalTransferResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalTransferResumeRequest) ProtoMessage() {}

func (x *SignalTransferResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalTransferResumeRequest.ProtoReflect.Descriptor instead.
func (*SignalTransferResumeRequest) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{14}
}

func (x *SignalTransferResumeRequest) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

// SignalTransferResumeResponse tells the client that the resume request was accepted.
type SignalTransferResumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignalTransferResumeResponse) Reset() {
	*x = SignalTransferResumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dsp_v1alpha1_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalTransferResumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalTransferResumeResponse) ProtoMessage() {}

func (x *SignalTransferResumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dsp_v1alpha1_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalTransferResumeResponse.ProtoReflect.Descriptor instead.
func (*SignalTransferResumeResponse) Descriptor() ([]byte, []int) {
	return file_dsp_v1alpha1_client_proto_rawDescGZIP(), []int{15}
}

var File_dsp_v1alpha1_client_proto protoreflect.FileDescriptor

var file_dsp_v1alpha1_client_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x73, 0x70, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x73, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x18, 0x64, 0x73, 0x70, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x1b, 0x0a, 0x19, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xef, 0x01, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12,
	0x69, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x64, 0x73, 0x70, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x51,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x73, 0x22, 0x5d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x70, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x22, 0x70, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64,
	0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x1d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x1e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x1f,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3f, 0x0a, 0x1c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x1f, 0x0a, 0x1d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3e, 0x0a, 0x1b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xc1, 0x07, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e, 0x64, 0x73,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x29, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x69, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2, 0x01, 0x0a, 0x25, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x64, 0x73, 0x70, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x12, 0x2c, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x72, 0x0a, 0x15, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x2a, 0x2e, 0x64, 0x73, 0x70, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x14, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x29, 0x2e, 0x64,
	0x73, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x73, 0x70, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xa7, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x73,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0b, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62,
	0x75, 0x66, 0x2d, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x64, 0x73, 0x70, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x3b, 0x64, 0x73, 0x70, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0xa2, 0x02, 0x03, 0x44, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x44, 0x73, 0x70, 0x2e, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x0c, 0x44, 0x73, 0x70, 0x5c, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x18, 0x44, 0x73, 0x70, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0d, 0x44, 0x73, 0x70, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dsp_v1alpha1_client_proto_rawDescOnce sync.Once
	file_dsp_v1alpha1_client_proto_rawDescData = file_dsp_v1alpha1_client_proto_rawDesc
)

func file_dsp_v1alpha1_client_proto_rawDescGZIP() []byte {
	file_dsp_v1alpha1_client_proto_rawDescOnce.Do(func() {
		file_dsp_v1alpha1_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_dsp_v1alpha1_client_proto_rawDescData)
	})
	return file_dsp_v1alpha1_client_proto_rawDescData
}

var file_dsp_v1alpha1_client_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_dsp_v1alpha1_client_proto_goTypes = []any{
	(*ClientServicePingRequest)(nil),                      // 0: dsp.v1alpha1.ClientServicePingRequest
	(*ClientServicePingResponse)(nil),                     // 1: dsp.v1alpha1.ClientServicePingResponse
	(*GetProviderCatalogueRequest)(nil),                   // 2: dsp.v1alpha1.GetProviderCatalogueRequest
	(*GetProviderCatalogueResponse)(nil),                  // 3: dsp.v1alpha1.GetProviderCatalogueResponse
	(*GetProviderDatasetRequest)(nil),                     // 4: dsp.v1alpha1.GetProviderDatasetRequest
	(*GetProviderDatasetResponse)(nil),                    // 5: dsp.v1alpha1.GetProviderDatasetResponse
	(*GetProviderDatasetDownloadInformationRequest)(nil),  // 6: dsp.v1alpha1.GetProviderDatasetDownloadInformationRequest
	(*GetProviderDatasetDownloadInformationResponse)(nil), // 7: dsp.v1alpha1.GetProviderDatasetDownloadInformationResponse
	(*SignalTransferCompleteRequest)(nil),                 // 8: dsp.v1alpha1.SignalTransferCompleteRequest
	(*SignalTransferCompleteResponse)(nil),                // 9: dsp.v1alpha1.SignalTransferCompleteResponse
	(*SignalTransferCancelledRequest)(nil),                // 10: dsp.v1alpha1.SignalTransferCancelledRequest
	(*SignalTransferCancelledResponse)(nil),               // 11: dsp.v1alpha1.SignalTransferCancelledResponse
	(*SignalTransferSuspendRequest)(nil),                  // 12: dsp.v1alpha1.SignalTransferSuspendRequest
	(*SignalTransferSuspendResponse)(nil),                 // 13: dsp.v1alpha1.SignalTransferSuspendResponse
	(*SignalTransferResumeRequest)(nil),                   // 14: dsp.v1alpha1.SignalTransferResumeRequest
	(*SignalTransferResumeResponse)(nil),                  // 15: dsp.v1alpha1.SignalTransferResumeResponse
	nil,                                                   // 16: dsp.v1alpha1.GetProviderCatalogueRequest.QueryParametersEntry
	(*Dataset)(nil),                                       // 17: dsp.v1alpha1.Dataset
	(*PublishInfo)(nil),                                   // 18: dsp.v1alpha1.PublishInfo
}
var file_dsp_v1alpha1_client_proto_depIdxs = []int32{
	16, // 0: dsp.v1alpha1.GetProviderCatalogueRequest.query_parameters:type_name -> dsp.v1alpha1.GetProviderCatalogueRequest.QueryParametersEntry
	17, // 1: dsp.v1alpha1.GetProviderCatalogueResponse.datasets:type_name -> dsp.v1alpha1.Dataset
	17, // 2: dsp.v1alpha1.GetProviderDatasetResponse.dataset:type_name -> dsp.v1alpha1.Dataset
	18, // 3: dsp.v1alpha1.GetProviderDatasetDownloadInformationResponse.publish_info:type_name -> dsp.v1alpha1.PublishInfo
	0,  // 4: dsp.v1alpha1.ClientService.Ping:input_type -> dsp.v1alpha1.ClientServicePingRequest
	2,  // 5: dsp.v1alpha1.ClientService.GetProviderCatalogue:input_type -> dsp.v1alpha1.GetProviderCatalogueRequest
	4,  // 6: dsp.v1alpha1.ClientService.GetProviderDataset:input_type -> dsp.v1alpha1.GetProviderDatasetRequest
	6,  // 7: dsp.v1alpha1.ClientService.GetProviderDatasetDownloadInformation:input_type -> dsp.v1alpha1.GetProviderDatasetDownloadInformationRequest
	8,  // 8: dsp.v1alpha1.ClientService.SignalTransferComplete:input_type -> dsp.v1alpha1.SignalTransferCompleteRequest
	10, // 9: dsp.v1alpha1.ClientService.SignalTransferCancelled:input_type -> dsp.v1alpha1.SignalTransferCancelledRequest
	12, // 10: dsp.v1alpha1.ClientService.SignalTransferSuspend:input_type -> dsp.v1alpha1.SignalTransferSuspendRequest
	14, // 11: dsp.v1alpha1.ClientService.SignalTransferResume:input_type -> dsp.v1alpha1.SignalTransferResumeRequest
	1,  // 12: dsp.v1alpha1.ClientService.Ping:output_type -> dsp.v1alpha1.ClientServicePingResponse
	3,  // 13: dsp.v1alpha1.ClientService.GetProviderCatalogue:output_type -> dsp.v1alpha1.GetProviderCatalogueResponse
	5,  // 14: dsp.v1alpha1.ClientService.GetProviderDataset:output_type -> dsp.v1alpha1.GetProviderDatasetResponse
	7,  // 15: dsp.v1alpha1.ClientService.GetProviderDatasetDownloadInformation:output_type -> dsp.v1alpha1.GetProviderDatasetDownloadInformationResponse
	9,  // 16: dsp.v1alpha1.ClientService.SignalTransferComplete:output_type -> dsp.v1alpha1.SignalTransferCompleteResponse
	11, // 17: dsp.v1alpha1.ClientService.SignalTransferCancelled:output_type -> dsp.v1alpha1.SignalTransferCancelledResponse
	13, // 18: dsp.v1alpha1.ClientService.SignalTransferSuspend:output_type -> dsp.v1alpha1.SignalTransferSuspendResponse
	15, // 19: dsp.v1alpha1.ClientService.SignalTransferResume:output_type -> dsp.v1alpha1.SignalTransferResumeResponse
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_dsp_v1alpha1_client_proto_init() }
func file_dsp_v1alpha1_client_proto_init() {
	if File_dsp_v1alpha1_client_proto != nil {
		return
	}
	file_dsp_v1alpha1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dsp_v1alpha1_client_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ClientServicePingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ClientServicePingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetProviderCatalogueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetProviderCatalogueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetProviderDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetProviderDatasetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetProviderDatasetDownloadInformationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetProviderDatasetDownloadInformationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SignalTransferCompleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SignalTransferCompleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SignalTransferCancelledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SignalTransferCancelledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SignalTransferSuspendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SignalTransferSuspendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SignalTransferResumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dsp_v1alpha1_client_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SignalTransferResumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dsp_v1alpha1_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dsp_v1alpha1_client_proto_goTypes,
		DependencyIndexes: file_dsp_v1alpha1_client_proto_depIdxs,
		MessageInfos:      file_dsp_v1alpha1_client_proto_msgTypes,
	}.Build()
	File_dsp_v1alpha1_client_proto = out.File
	file_dsp_v1alpha1_client_proto_rawDesc = nil
	file_dsp_v1alpha1_client_proto_goTypes = nil
	file_dsp_v1alpha1_client_proto_depIdxs = nil
}
