# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: dsp/v1alpha1/provider.proto for package 'Dsp.V1alpha1'
# Original file comments:
# Copyright 2024 go-dataspace
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'dsp/v1alpha1/provider_pb'

module Dsp
  module V1alpha1
    module ProviderService
      # The ProviderService is the expected grpc service that RUN-DSP will interface with.
      # Outside of the defined calls, RUN-DSP will also forward the `authorization` header.
      # The reason for this is that authorization will vary between dataspaces. Also, the provider
      # will want to show different data dependent on the credentials.
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'dsp.v1alpha1.ProviderService'

        # Ping is a request to test if the provider is working, and to test the auth information.
        rpc :Ping, ::Dsp::V1alpha1::PingRequest, ::Dsp::V1alpha1::PingResponse
        # Gets the catalogue based on the query parameters and the authorization header.
        rpc :GetCatalogue, ::Dsp::V1alpha1::GetCatalogueRequest, ::Dsp::V1alpha1::GetCatalogueResponse
        # Gets information about a single dataset.
        rpc :GetDataset, ::Dsp::V1alpha1::GetDatasetRequest, ::Dsp::V1alpha1::GetDatasetResponse
        # Publishes a dataset,
        rpc :PublishDataset, ::Dsp::V1alpha1::PublishDatasetRequest, ::Dsp::V1alpha1::PublishDatasetResponse
        # Unpublishes a dataset.
        rpc :UnpublishDataset, ::Dsp::V1alpha1::UnpublishDatasetRequest, ::Dsp::V1alpha1::UnpublishDatasetResponse
        # Asks provider to suspend a transfer
        rpc :SuspendPublishedDataset, ::Dsp::V1alpha1::SuspendPublishedDatasetRequest, ::Dsp::V1alpha1::SuspendPublishedDatasetResponse
        # Asks provider to unsuspend (re-publish?) a transfer
        rpc :UnsuspendPublishedDataset, ::Dsp::V1alpha1::UnsuspendPublishedDatasetRequest, ::Dsp::V1alpha1::UnsuspendPublishedDatasetResponse
      end

      Stub = Service.rpc_stub_class
    end
  end
end
