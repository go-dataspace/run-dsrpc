// Copyright 2024 go-dataspace
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.10.0
// @generated from file dsp/v1alpha1/client.proto (package dsp.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Dataset, PublishInfo } from "./types_pb.js";

/**
 * ClientServicePingRequest is an empty message, used instead of the Empty type in case we want
 * to add parameters.
 *
 * @generated from message dsp.v1alpha1.ClientServicePingRequest
 */
export const ClientServicePingRequest = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.ClientServicePingRequest",
  [],
);

/**
 * ClientServicePingResponse is an empty message for checking GRPC connection.
 *
 * @generated from message dsp.v1alpha1.ClientServicePingResponse
 */
export const ClientServicePingResponse = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.ClientServicePingResponse",
  [],
);

/**
 * GetProviderCatalogueRequest represents the parameters for the GetProviderCatalogue request
 *
 * @generated from message dsp.v1alpha1.GetProviderCatalogueRequest
 */
export const GetProviderCatalogueRequest = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.GetProviderCatalogueRequest",
  () => [
    { no: 1, name: "provider_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "query_parameters", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * GetProviderCatalogueResponse returns all the datasets matched by GetProviderCatalogue.
 *
 * @generated from message dsp.v1alpha1.GetProviderCatalogueResponse
 */
export const GetProviderCatalogueResponse = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.GetProviderCatalogueResponse",
  () => [
    { no: 1, name: "datasets", kind: "message", T: Dataset, repeated: true },
  ],
);

/**
 * GetProviderDatasetRequest contains the dataset ID.
 *
 * @generated from message dsp.v1alpha1.GetProviderDatasetRequest
 */
export const GetProviderDatasetRequest = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.GetProviderDatasetRequest",
  () => [
    { no: 1, name: "provider_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "dataset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * GetProviderDatasetResponse contains the requested dataset.
 *
 * @generated from message dsp.v1alpha1.GetProviderDatasetResponse
 */
export const GetProviderDatasetResponse = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.GetProviderDatasetResponse",
  () => [
    { no: 1, name: "provider_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "dataset", kind: "message", T: Dataset },
  ],
);

/**
 * GetProviderDatasetDownloadInformationRequest contains the ID for the dataset
 * we want to be able to download.
 *
 * @generated from message dsp.v1alpha1.GetProviderDatasetDownloadInformationRequest
 */
export const GetProviderDatasetDownloadInformationRequest = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.GetProviderDatasetDownloadInformationRequest",
  () => [
    { no: 1, name: "provider_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "dataset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * GetProviderDatasetDownloadInformationResponse contains the information needed
 * to download a file, including authentication etc.
 *
 * @generated from message dsp.v1alpha1.GetProviderDatasetDownloadInformationResponse
 */
export const GetProviderDatasetDownloadInformationResponse = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.GetProviderDatasetDownloadInformationResponse",
  () => [
    { no: 1, name: "publish_info", kind: "message", T: PublishInfo },
    { no: 2, name: "transfer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * SignalTransferCompleteRequest is for telling the provider that we are done
 * receiving the dataset.
 *
 * @generated from message dsp.v1alpha1.SignalTransferCompleteRequest
 */
export const SignalTransferCompleteRequest = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.SignalTransferCompleteRequest",
  () => [
    { no: 1, name: "transfer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * SignalTransferCompleteResponse is received when we successfully sent a
 * transfer complete request.
 *
 * @generated from message dsp.v1alpha1.SignalTransferCompleteResponse
 */
export const SignalTransferCompleteResponse = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.SignalTransferCompleteResponse",
  [],
);

/**
 * SignalTransferCancelledRequest is sent when the client wants to cancel a transfer.
 *
 * @generated from message dsp.v1alpha1.SignalTransferCancelledRequest
 */
export const SignalTransferCancelledRequest = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.SignalTransferCancelledRequest",
  () => [
    { no: 1, name: "transfer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * SignalTransferCancelledResponse tells that the cancellation requests was received.
 *
 * @generated from message dsp.v1alpha1.SignalTransferCancelledResponse
 */
export const SignalTransferCancelledResponse = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.SignalTransferCancelledResponse",
  [],
);

/**
 * SignalTransferSuspendRequest is sent when the client wishes to pause the transfer.
 *
 * @generated from message dsp.v1alpha1.SignalTransferSuspendRequest
 */
export const SignalTransferSuspendRequest = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.SignalTransferSuspendRequest",
  () => [
    { no: 1, name: "transfer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * SignalTransferSuspendResponse tells the client that the pause request was received.
 *
 * @generated from message dsp.v1alpha1.SignalTransferSuspendResponse
 */
export const SignalTransferSuspendResponse = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.SignalTransferSuspendResponse",
  [],
);

/**
 * SignalTransferResumeRequest tells the provider that the client wants to resume transfer.
 *
 * @generated from message dsp.v1alpha1.SignalTransferResumeRequest
 */
export const SignalTransferResumeRequest = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.SignalTransferResumeRequest",
  () => [
    { no: 1, name: "transfer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * SignalTransferResumeResponse tells the client that the resume request was accepted.
 *
 * @generated from message dsp.v1alpha1.SignalTransferResumeResponse
 */
export const SignalTransferResumeResponse = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.SignalTransferResumeResponse",
  [],
);

