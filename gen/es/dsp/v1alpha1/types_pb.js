// Copyright 2024 go-dataspace
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.10.0
// @generated from file dsp/v1alpha1/types.proto (package dsp.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * AuthenticationType represents the way to authenticate to get a published information.
 *
 * @generated from enum dsp.v1alpha1.AuthenticationType
 */
export const AuthenticationType = /*@__PURE__*/ proto3.makeEnum(
  "dsp.v1alpha1.AuthenticationType",
  [
    {no: 0, name: "AUTHENTICATION_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "AUTHENTICATION_TYPE_BEARER", localName: "BEARER"},
    {no: 2, name: "AUTHENTICATION_TYPE_BASIC", localName: "BASIC"},
  ],
);

/**
 * Dataset represents a dataset. What exactly is in a dataset is up to the service.
 * An example of a dataset could be a file that's served, or multiple files
 * that are considered a set.
 *
 * @generated from message dsp.v1alpha1.Dataset
 */
export const Dataset = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.Dataset",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "access_methods", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "message", T: Multilingual, repeated: true },
    { no: 5, name: "keywords", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "issued", kind: "message", T: Timestamp, opt: true },
    { no: 8, name: "modified", kind: "message", T: Timestamp, opt: true },
    { no: 9, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * PublishInfo represents a published file, where to get it and its authentication details.
 *
 * @generated from message dsp.v1alpha1.PublishInfo
 */
export const PublishInfo = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.PublishInfo",
  () => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "authentication_type", kind: "enum", T: proto3.getEnumType(AuthenticationType) },
    { no: 3, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Multilingual represents a message with language metadata attached.
 *
 * @generated from message dsp.v1alpha1.Multilingual
 */
export const Multilingual = /*@__PURE__*/ proto3.makeMessageType(
  "dsp.v1alpha1.Multilingual",
  () => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

